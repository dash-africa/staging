{"version":3,"sources":["../server/app.js"],"names":["express","routes","mongoose","bodyParser","path","cors","swaggerUi","swaggerDocument","connect","process","env","DB","useNewUrlParser","useCreateIndex","err","response","console","log","app","use","serve","setup","set","static","join","__dirname","json","urlencoded","extended","get","req","res","sendFile"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEAL,SAASM,OAAT,CAAiBC,QAAQC,GAAR,CAAYC,EAA7B,EAAiC,EAAEC,iBAAiB,IAAnB,EAAyBC,gBAAgB,IAAzC,EAAjC,EAAkF,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACjG,QAAID,GAAJ,EAAS;AACLE,gBAAQC,GAAR,CAAYH,GAAZ;AACH,KAFD,MAEO;AACHE,gBAAQC,GAAR,CAAY,oBAAZ;AACH;AACJ,CAND;;AAQA,MAAMC,MAAMlB,SAAZ;;AAEAkB,IAAIC,GAAJ,CAAQ,WAAR,EAAqBb,UAAUc,KAA/B,EAAsCd,UAAUe,KAAV,CAAgBd,eAAhB,CAAtC;;AAEAW,IAAIC,GAAJ,CAAQd,MAAR;;AAEA;AACAa,IAAII,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAGA;AACAJ,IAAIC,GAAJ,CAAQnB,QAAQuB,MAAR,CAAenB,KAAKoB,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAP,IAAIC,GAAJ,CAAQhB,WAAWuB,IAAX,EAAR;AACAR,IAAIC,GAAJ,CAAQhB,WAAWwB,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;;AAIA;AACAV,IAAIC,GAAJ,CAAQ,SAAR,EAAmBlB,MAAnB;;AAEAiB,IAAIW,GAAJ,CAAQ,IAAR,EAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxBA,QAAIC,QAAJ,CAAa5B,KAAKoB,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAb;AACH,CAFD;;AAIA;AACA;AACA;;AAEA,eAAeP,GAAf","file":"app.js","sourcesContent":["import express from 'express';\nimport routes from './routes';\nimport mongoose from 'mongoose';\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport cors from 'cors';\nimport swaggerUi from 'swagger-ui-express';\nimport swaggerDocument from './../swagger/swagger.json';\n\nmongoose.connect(process.env.DB, { useNewUrlParser: true, useCreateIndex: true }, (err, response) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('Connected to mongo');\n    }\n});\n\nconst app = express();\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n\napp.use(cors());\n\n// set the view engine to ejs\napp.set('view engine', 'ejs');\n\n\n// make express look in the public directory for assets (css/js/img)\napp.use(express.static(path.join(__dirname, '../public')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\n\n//Prefix the API version\napp.use('/api/v1', routes);\n\napp.get('/*', (req, res) => {\n    res.sendFile(path.join(__dirname, '../public/index.html'));\n});\n\n// app.listen(port, () => {\n//     console.log('The server has started on ' + `${port}`);\n// });\n\nexport default app;"]}