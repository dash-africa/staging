{"version":3,"sources":["../server/routes.js"],"names":["express","jwt","db","controllers","routes","verifyToken","req","res","next","bearerHeader","headers","verify","process","env","SECRET_KEY","err","data","User","findById","user","then","status","json","message","catch","get","post","userController","loginUser","registerUser","confirmationPost","resendTokenPost","resendForgottenToken","changePassword","getAllUsers","getUserInfo","cartController","createCart","fetchCart","categoryController","createCategory","addItem","allCategories","put","editCategory","delete","deleteCategory","removeItem","cityControler","createCity","addStore","allCities","removeStore","editCity","deleteCity","itemController","create","addToCart","fetchItem","getAll","editItem","deleteItem","storeController","createStore","allStores","editStore","deleteStore","addCategory"],"mappings":"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","file":"routes.js","sourcesContent":["import express from 'express';\nimport jwt from 'jsonwebtoken';\nimport db from '../models';\nimport controllers from '../controllers';\n\nconst routes = express();\n\nfunction verifyToken (req, res, next){\n    // GET THE AUTH HEADER VALUE\n    const bearerHeader = req.headers['authorization'];\n    // check if bearer is undefined\n    if (typeof bearerHeader !== 'undefined') {\n        // verify jwt\n        jwt.verify(bearerHeader, process.env.SECRET_KEY, (err, data)=>{\n            db.User.findById(data.user).then((user)=>{\n                if (user) {\n                    req.user = data.user   ; \n                    next();             \n                }else{\n                    res.status(403).json({ status: false, message: 'Unauthorized' });\n                }\n            }).catch((err)=>{\n                if (err) { res.status(403).json({ status: false, message: 'Unauthorized' }); }\n            });\n        });\n    } else {\n        //forbiden\n        res.status(403).json({ status: false, message: 'Unauthorized' });\n    }\n}\n\n\nroutes.get('/', (req, res)=>{\n    res.json({status: true});\n});\n\n// user routes\nroutes.post('/user/login', controllers.userController.loginUser);\nroutes.post('/user/register', controllers.userController.registerUser);\nroutes.post('/confirmation', controllers.userController.confirmationPost);\nroutes.post('/resend', controllers.userController.resendTokenPost);\nroutes.post('/sendForget', controllers.userController.resendForgottenToken);\nroutes.post('/forgot_password', controllers.userController.changePassword);\nroutes.get('/user/all', controllers.userController.getAllUsers);\nroutes.post('/user/getInfo', verifyToken, controllers.userController.getUserInfo);\n\n// Cart Routes\nroutes.post('/cart/create', verifyToken, controllers.cartController.createCart);\nroutes.post('/cart/fetch', controllers.cartController.fetchCart);\n\n// Category Routes\nroutes.post('/category/create', controllers.categoryController.createCategory);\nroutes.post('/category/addItem', controllers.categoryController.addItem);\nroutes.get('/category/all', controllers.categoryController.allCategories);\nroutes.put('/category/edit', controllers.categoryController.editCategory);\nroutes.delete('/category/delete/:id', controllers.categoryController.deleteCategory);\nroutes.post('/category/removeItem', controllers.categoryController.removeItem);\n\n// City Routes\nroutes.post('/city/create', controllers.cityControler.createCity);\nroutes.post('/city/addStore', controllers.cityControler.addStore);\nroutes.get('/city/all', controllers.cityControler.allCities);\nroutes.post('/city/removeStore', controllers.cityControler.removeStore);\nroutes.put('/city/edit', controllers.cityControler.editCity);\nroutes.delete('/city/delete/:id', controllers.cityControler.deleteCity);\n\n// Item Routes\nroutes.post('/item/create', controllers.itemController.create);\nroutes.post('/item/addToCart', controllers.itemController.addToCart);\nroutes.post('/item/fetch', controllers.itemController.fetchItem);\nroutes.get('/item/all', controllers.itemController.getAll);\nroutes.put('/item/edit', controllers.itemController.editItem);\nroutes.delete('/item/delete/:id', controllers.itemController.deleteItem);\n\n// Store Routes\nroutes.post('/store/create', controllers.storeController.createStore);\nroutes.get('/store/all', controllers.storeController.allStores);\nroutes.put('/store/edit', controllers.storeController.editStore);\nroutes.delete('/store/delete/:id', controllers.storeController.deleteStore);\nroutes.addCategory('/store/addCategory', controllers.storeController.addCategory);\n\nexport default routes;"]}